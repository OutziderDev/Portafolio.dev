---
const {color,type} = Astro.props
---
{ type === 'wave' ? (
  <div class={`rotate-180  bottom-14 select ${color}`}>
    <svg data-name="wave"
      class="wave-svg"
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 1200 120" 
      preserveAspectRatio="none">
        <path d="M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z" >   
        </path>
    </svg>
  </div>
):(
  <div class={`rotate-180 ${color}`}>
    <svg data-name="slice" class="relative block w-full h-60 -mt-24" xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 1200 61"
        preserveAspectRatio="none">
        <rect x="1200" height="3.6"></rect>
        <rect height="3.6"></rect>
        <path d="M0,0V3.6H580.08c11,0,19.92,5.09,19.92,13.2,0-8.14,8.88-13.2,19.92-13.2H1200V0Z"></path>
    </svg>
  </div>
)}



<style>
  @keyframes Move {
  0% { transform: translateX(0); }
  50% { transform: translateX(-10px); scale: 115%;} 
  100% { transform: translateX(0); }
}

.rotate-180 path {
  animation: Move 5s ease-in-out infinite;
}
</style>