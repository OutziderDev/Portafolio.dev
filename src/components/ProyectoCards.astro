---
import Github from '../assets/icons/Github.svg';
import { Image } from 'astro:assets';
const icons = import.meta.glob("../assets/icons/*.svg", {eager: true})
const {titulo,demoUrl,gitUrl,descripcion,image,stack,disable,type,fecha,slug} = Astro.props 

const filteredIcons = Object.entries(icons)
.filter(([path]) => {
  const lastSegment = path.split("/").pop()
  return stack.includes((lastSegment ?? "").replace(".svg", ""))})
.map(([, mod]) => (mod as {default:any}).default)
---

<div data-slug={slug} role="link" class="proyecto-card cursor-pointer">
  <div  class='bg-primary rounded-3xl  overflow-hidden border-black gradient-border p-1 relative'>
    <div class="grid lg:grid-cols-2 lg:gap-16 bg-primary p-4 rounded-3xl overflow-hidden">
      <div class="pb-4">
        <div class="inline-flex font-serif gap-2 bg-gradient-to-b from-rose-600 from-20%  to-rose-400 bg-clip-text text-transparent uppercase font-bold tracking-widest text-sm">
          <span>{type} - {fecha}</span>
        </div>
  
        <h3 class="text-3xl  mt-2 md:text-4xl md:mt-4">
          {titulo}
        </h3>
        <div class="flex gap-2 w-full">
          <a href={demoUrl}
            target="_blank"
            rel="noopener noreferrer"
            class={ disable ? 'bg-gray-400 pointer-events-none w-full text-gray-950  rounded-lg font-semibold inline-flex items-center justify-center gap-2 mt-4  md:w-fit px-3 py-2 leading-none ' :  "bg-white w-full text-gray-950 rounded-lg font-semibold inline-flex items-center justify-center gap-2 mt-4 active:scale-95 transition-transform hover:bg-white/90 md:w-fit px-3 py-2 leading-none group"}
            >
              <span class="flex items-center gap-2 group" >
                Demo
                <div class="group-hover:-rotate-45 transition ">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" class="size-4" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
                  </svg>
                </div>
              </span>
          </a>
          <a href={gitUrl} target="_blank" rel="noopener noreferrer" class="bg-white w-full text-gray-950  rounded-lg font-semibold inline-flex items-center justify-center gap-2 mt-4 active:scale-95 transition-transform hover:bg-white/90 md:w-fit p-2 leading-none group">
              <span class=" flex items-center gap-2">
                Github
                <Github class="size-4"/>
              </span>
          </a>
        </div>
        <p class="border-t border-gray-500 mt-3 py-2 text-wrap">
          {descripcion}
        </p>
  
        <div class="flex gap-2 border-t border-gray-500 pt-2 px-4 -mb-4">
          {
            filteredIcons.map((Icon) => {
              return <Icon class="size-7 fill-white"/>
            })
          }
        </div>
  
      </div>
  
      <div class="relative">
        <Image
          width={1200}
          height={700}
          class="mt-8 -mb-4 rounded-t-3xl border-4 border-b-0 object-cover  lg:border-r-0 border-zinc-300/30 lg:w-auto lg:absolute  lg:h-full lg:max-w-none lg:hover:scale-105 delay-200 transition"
          src=`/${image}`
          alt="Preview del proyecto"
        />
      </div>
    </div>
  </div>
</div>

<script >
  document.addEventListener("DOMContentLoaded", () => {
    const contenedores = document.querySelectorAll(".proyecto-card")
    if (contenedores) {
      contenedores.forEach( (contenedor )  => {
        contenedor.addEventListener('click', () => {
          const div = contenedor as HTMLElement
          const slug = div.dataset.slug
          window.location.href= `/proyectos/${slug}`
        })
      })
    }
  })
</script>

<style>
  @property --gradient-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  :root {
    --gradient-color-1: red;
    --gradient-color-2: rgba(255, 255, 255, 0.625);
    --gradient-color-3: black;
  }

  .gradient-border {
    background-image: linear-gradient(
      var(--gradient-angle),
      var(--gradient-color-1),
      var(--gradient-color-2),
      var(--gradient-color-3),
    );
    animation: rotate 6s linear infinite;
  }

  @keyframes rotate {
    from {
      --gradient-angle: 0deg;
    }
    to {
      --gradient-angle: 360deg;
    }
  }

  h3 {
    font-family: 'Luckiest Guy', system-ui;
  }

</style>
